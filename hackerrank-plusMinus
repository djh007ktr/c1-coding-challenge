/*
* Given an array of integers, calculate the ratios of its elements that are positive, negative, and zero. Print the decimal value of each fraction on a new line with 6 places after the decimal.
* Note: This challenge introduces precision problems. The test cases are scaled to six decimal places, though answers with absolute error of up to 10^-4  are acceptable.
*/

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'plusMinus' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void plusMinus(List<Integer> arr) {
    // Write your code here
        
        double qty = arr.size(), pos = 0, neg = 0, zeros = 0; //must initialize as doubles???
        
        //Process entries and count: standard for
        // for (int i = 0; i < qty; i++) {
        //     if (arr.get(i) < 0) {neg++;}
        //     else if (arr.get(i) == 0) {zeros++;}
        //     else {pos++;}    
        // }
        
        //Process entries and count: enhanced for
        for (int val : arr) {
            if (val < 0) {neg++;} else
            if (val == 0) {zeros++;} else 
            pos++;
        }
        
        //Output formatted ratios
        System.out.printf("%.6f%n", pos / qty);
        System.out.printf("%.6f%n", neg / qty);
        System.out.printf("%.6f%n", zeros / qty);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.plusMinus(arr);

        bufferedReader.close();
    }
}
